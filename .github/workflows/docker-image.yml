# name: Docker Image CI

# on:
#   push:
#     branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]

# jobs:

#   build:

#     runs-on: ubuntu-latest

#     steps:
#     - uses: actions/checkout@v3
#     - name: Build the Docker image
#       run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)

# name: publish
# on: [push]
# jobs:
#   publish-gluetun-qbit-port-man:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v3
#       - name: gluetun-qbit-port-man
#         run: docker buildx build . --platform linux/amd64,linux/arm64 -t thejaykid7/gluetun-qbittorrent-port-manager:$(date +%s)

# name: ci

# on:
#   push:
#     branches:
#       - 'main'

# # jobs:
# #   docker:
# #     runs-on: ubuntu-latest
# #     steps:
# #       -
# #         name: Set up QEMU
# #         uses: docker/setup-qemu-action@v3
# #       -
# #         uses: docker/login-action@v1
# #         with:
# #           registry: ghcr.io
# #           username: ${{ github.actor }}
# #           password: ${{ secrets.GITHUB_TOKEN }}
# #       -
# #         name: Set up Docker Buildx
# #         uses: docker/setup-buildx-action@v3
# #       # -
# #       #   name: Login to Docker Hub
# #       #   uses: docker/login-action@v3
# #       #   with:
# #       #     username: ${{ secrets.DOCKERHUB_USERNAME }}
# #       #     password: ${{ secrets.DOCKERHUB_TOKEN }}
# #       - uses: actions/checkout@v3
# #       - name: gluetun-qbit-port-man
# #         run: docker buildx build . --platform linux/amd64,linux/arm64 -t thejaykid7/gluetun-qbittorrent-port-manager:$(date +%s) --push

# jobs:
#   docker:
#     name: Docker Image
#     runs-on: ubuntu-latest
#     steps:
#     - name: Checkout
#       uses: actions/checkout@v3
#     - name: Extract metadata for the Docker image
#       id: meta
#       uses: docker/metadata-action@v4
#       with:
#         images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
#         tags: |
#           type=raw,value=latest,enable={{is_default_branch}}
#           type=sha,prefix={{branch}}-,suffix=-{{date 'X'}}
#     - name: Set up QEMU
#       uses: docker/setup-qemu-action@v2
#     - name: Set up Docker Buildx
#       uses: docker/setup-buildx-action@v2
#     - name: Login to Docker registry
#       uses: docker/login-action@v2
#       with:
#         registry: ghcr.io
#         username: ${{ github.repository_owner }}
#         password: ${{ secrets.GITHUB_TOKEN }}
#     - name: Build and push
#       uses: docker/build-push-action@v3
#       with:
#         context: .
#         push: true
#         platform: linux/amd64,linux/arm64
#         tags: ${{ steps.meta.outputs.tags }}
#         labels: ${{ steps.meta.outputs.labels }}

on:
  workflow_call:
name: Docker Image

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  docker:
    name: Docker Image
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Extract metadata for the Docker image
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=raw,value=latest,enable={{is_default_branch}}
          type=sha,prefix={{branch}}-,suffix=-{{date 'X'}}
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to Docker registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build and push
      uses: docker/build-push-action@v3
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        platforms: linux/amd64,linux/arm64
